[["data-transformation.html", "Chapter 3 Data transformation 3.1 Feature Selection 3.2 Tokenization 3.3 Sentiment 3.4 Summary of added features", " Chapter 3 Data transformation 3.1 Feature Selection There are 35 features in the data set and more sub-features within a feature. After careful consideration, we chose 7 features to construct our data set for analysis. The following is a table describing all selected variables. Features Description created_at creation time of tweet id_str tweet id text truncated tweet of length&lt;140 user_id user id followers_count number of followers of user location location of tweet full_text full text of tweet Of the 7 features, user_id and follower_count are sub-features from user. They captures the id and the number of followers of a user respectively. location is a sub-feature from place. It is a user-identified location, which they can put anything on it. full_text is a sub-feature from extended tweet. It captures tweets that has over 140 characters. We did not keep the feature geo as we found out that it has a missing percentage of almost 100 percent. It will show up in the missing value section to support out decision. After selecting our basic features, we notice that texts are stored in two different features. If the tweet is longer than 140 characters, the tweet would be truncated and put into ‚Äútext‚Äù. The original tweet would be put into‚Äúfull_text‚Äù.To make our analysis more convenient, we add a new variable called ‚Äúoriginal_text‚Äù to store the tweets 3.2 Tokenization Next, we conduct tokenization. This a process that will help us with other natural langauge processing analysis. Since there are some special characters like hashtag and usernames that might otherwise be stripped away using other tokenizer, we use the specific tokenize_tweets() function from the tokenizers library. Below is a demonstration for how it tokenizes one of the tweets. ## [1] &quot;@AGlobalCitizen @AlexanderBruyns @PPathole @elonmusk @SpaceX We would also somehow need to create some sort of artificial magnetic field around the entire planet to make sure that any biomass we take there isn&#39;t immediately destroyed by cosmic radiation&quot; ## [[1]] ## [1] &quot;@AGlobalCitizen&quot; &quot;@AlexanderBruyns&quot; &quot;@PPathole&quot; &quot;@elonmusk&quot; ## [5] &quot;@SpaceX&quot; &quot;we&quot; &quot;would&quot; &quot;also&quot; ## [9] &quot;somehow&quot; &quot;need&quot; &quot;to&quot; &quot;create&quot; ## [13] &quot;some&quot; &quot;sort&quot; &quot;of&quot; &quot;artificial&quot; ## [17] &quot;magnetic&quot; &quot;field&quot; &quot;around&quot; &quot;the&quot; ## [21] &quot;entire&quot; &quot;planet&quot; &quot;to&quot; &quot;make&quot; ## [25] &quot;sure&quot; &quot;that&quot; &quot;any&quot; &quot;biomass&quot; ## [29] &quot;we&quot; &quot;take&quot; &quot;there&quot; &quot;isnt&quot; ## [33] &quot;immediately&quot; &quot;destroyed&quot; &quot;by&quot; &quot;cosmic&quot; ## [37] &quot;radiation&quot; We then add word_tokens as a feature to our dataset. 3.3 Sentiment Tweets have sentiments and here we try to classify a tweet as positive, negative or netural. Before extracting sentiments from the tweets, we need to firstly clean the text such that it does not contain any special characters such as hashtags, ‚Äú\",‚Äù@\", website links, etc. Some special character might affect the accuracy of the sentiment score. Below is a comparison between original text and the cleaned text. Typically ‚Äú@‚Äù and website links are removed. After cleaning all the tweets, they were stored in a new feature cleaned_text in our dataset. ## [1] &quot;@elonmusk @ElemonGame Great ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è @Corsair will help @Elemongame the first blockchain game ever owns hundred millions users. This is far beyond my imagination. To the Moon and Mars. @ElemonGame @CORSAIR #Elemon #Corsair love ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏èüöÄüöÄüöÄ https://t.co/iakL1e8brw&quot; ## [1] &quot;elonmusk ElemonGame Great ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è Corsair will help Elemongame the first blockchain game ever owns hundred millions users. This is far beyond my imagination. To the Moon and Mars. ElemonGame CORSAIR Elemon Corsair love ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏èüöÄüöÄüöÄ &quot; Now, we determine the sentiment score for each tweet using library ‚Äúsyuzhet‚Äù, which is a custom sentiment dictionary developed in the Nebraska Literary Lab. We then classify each tweet into three categories: positive(score&gt;0), netural(socre=0), and negative(score&lt;0). The sentiment scores are stored in a new feature sentimetn_score. We add sentiment as feature into our dataframe. It captures the sentiment category of a tweet. 3.4 Summary of added features We added 5 new features into the dataset after some processing, adding to a total of 12 features. Those new features will help us better conduct analysis and visualizations. Below is a table describing all added features. variables descriptions original_text original text word_tokens a list of word tokens cleaned_text text after removing special characters sentiment_score sentiment scores sentiment sentiment of tweet: positive, neutral, or negative "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
